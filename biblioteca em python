{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/dvzin0801/python-colab/blob/main/biblioteca%20em%20python\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "\n",
        "# Classe Livro\n",
        "\n",
        "class Livro:\n",
        "    def __init__(self, titulo, autor, genero, quantidade):\n",
        "        self.titulo = titulo\n",
        "        self.autor = autor\n",
        "        self.genero = genero\n",
        "        self.quantidade = quantidade\n",
        "\n",
        "    def __str__(self):\n",
        "        return f\"{self.titulo} - {self.autor} | Gênero: {self.genero} | Qtde: {self.quantidade}\"\n",
        "\n",
        "\n",
        "\n",
        "# Lista de Livros\n",
        "\n",
        "livros = []\n",
        "\n",
        "\n",
        "\n",
        "# Funções\n",
        "\n",
        "def cadastrar_livro():\n",
        "    print(\"\\n--- Cadastro de Livro ---\")\n",
        "    titulo = input(\"Título: \")\n",
        "    autor = input(\"Autor: \")\n",
        "    genero = input(\"Gênero: \")\n",
        "    quantidade = int(input(\"Quantidade disponível: \"))\n",
        "\n",
        "    novo = Livro(titulo, autor, genero, quantidade)\n",
        "    livros.append(novo)\n",
        "    print(f\" Livro '{titulo}' cadastrado com sucesso!\")\n",
        "\n",
        "\n",
        "def listar_livros():\n",
        "    print(\"\\n--- Lista de Livros ---\")\n",
        "    if not livros:\n",
        "        print(\"Nenhum livro cadastrado ainda.\")\n",
        "    else:\n",
        "        for livro in livros:\n",
        "            print(livro)\n",
        "\n",
        "\n",
        "def buscar_livro():\n",
        "    print(\"\\n--- Buscar Livro ---\")\n",
        "    titulo = input(\"Digite o título do livro: \")\n",
        "\n",
        "    for livro in livros:\n",
        "        if livro.titulo.lower() == titulo.lower():\n",
        "            print(f\" Livro encontrado: {livro}\")\n",
        "            return\n",
        "    print(\"Livro não encontrado.\")\n",
        "\n",
        "\n",
        "def gerar_grafico():\n",
        "    if not livros:\n",
        "        print(\"⚠ Não há livros cadastrados para gerar gráfico.\")\n",
        "        return\n",
        "\n",
        "    generos = {}\n",
        "    for livro in livros:\n",
        "        if livro.genero in generos:\n",
        "            generos[livro.genero] += livro.quantidade\n",
        "        else:\n",
        "            generos[livro.genero] = livro.quantidade\n",
        "\n",
        "    plt.bar(generos.keys(), generos.values())\n",
        "    plt.title(\"Quantidade de Livros por Gênero\")\n",
        "    plt.xlabel(\"Gênero\")\n",
        "    plt.ylabel(\"Quantidade\")\n",
        "    plt.show()\n",
        "\n",
        "\n",
        "# =========================\n",
        "# Menu Principal\n",
        "# =========================\n",
        "def menu():\n",
        "    while True:\n",
        "        print(\"\\n===== Biblioteca =====\")\n",
        "        print(\"1. Cadastrar Livro\")\n",
        "        print(\"2. Listar Livros\")\n",
        "        print(\"3. Buscar Livro\")\n",
        "        print(\"4. Gerar Gráfico por Gênero\")\n",
        "        print(\"5. Sair\")\n",
        "\n",
        "        opcao = input(\"Escolha uma opção: \")\n",
        "\n",
        "        if opcao == \"1\":\n",
        "            cadastrar_livro()\n",
        "        elif opcao == \"2\":\n",
        "            listar_livros()\n",
        "        elif opcao == \"3\":\n",
        "            buscar_livro()\n",
        "        elif opcao == \"4\":\n",
        "            gerar_grafico()\n",
        "        elif opcao == \"5\":\n",
        "            print(\" Encerrando o sistema. Até logo!\")\n",
        "            break\n",
        "        else:\n",
        "            print(\"Opção inválida, tente novamente.\")\n",
        "\n",
        "\n",
        "\n",
        "# Executando o Programa\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    menu()\n"
      ],
      "metadata": {
        "id": "3HnNtQ8mXnss",
        "outputId": "9d3d7e7b-ed35-4cd8-e8c9-8f6e5826d82c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "===== Biblioteca =====\n",
            "1. Cadastrar Livro\n",
            "2. Listar Livros\n",
            "3. Buscar Livro\n",
            "4. Gerar Gráfico por Gênero\n",
            "5. Sair\n",
            "Escolha uma opção: 1\n",
            "\n",
            "--- Cadastro de Livro ---\n",
            "Título: jack pick\n",
            "Autor: davizin\n",
            "Gênero: gay\n",
            "Quantidade disponível: 5\n",
            " Livro 'jack pick' cadastrado com sucesso!\n",
            "\n",
            "===== Biblioteca =====\n",
            "1. Cadastrar Livro\n",
            "2. Listar Livros\n",
            "3. Buscar Livro\n",
            "4. Gerar Gráfico por Gênero\n",
            "5. Sair\n",
            "Escolha uma opção: 5\n",
            " Encerrando o sistema. Até logo!\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "name": "Conheça o Colab",
      "toc_visible": true,
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}